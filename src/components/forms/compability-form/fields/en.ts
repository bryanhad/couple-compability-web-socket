import { FormQuestion } from "../type"

export const EN_FORM_QUESTIONS: Record<string, FormQuestion> = {
    favDateActivity: {
        fieldName: "favDateActivity",
        emoji: "üßë‚Äçü§ù‚Äçüßë",
        label: `What's your idea of a "perfect" date?`,
        options: [
            { label: "Fine dining, candlelight, looking hot af", value: "fancy_dinner" },
            { label: "Netflix & chill‚Ä¶ but actually watching", value: "netflix_chill" },
            { label: "Board games & aggressive rule enforcement", value: "board_game_night" },
            { label: "Running away from our responsibilities", value: "escape" },
        ],
    },
    bathroomEtiquette: {
        fieldName: "bathroomEtiquette",
        emoji: "üöΩ",
        label: `If you see the toilet paper roll is empty what do you do?`,
        options: [
            { label: "Replace it like a decent human being", value: "replace" },
            { label: "Pretend I didn't see it", value: "ignore" },
            { label: "Take the cardboard roll and make a kazoo", value: "kazoo" },
            { label: "Cry and hope someone else fixes it", value: "cry" },
        ],
    },
    apocalypticSkills: {
        fieldName: "apocalypticSkills",
        emoji: "üßü",
        label: `A zombie apocalypse just started. What's your biggest contribution to survival?`,
        options: [
            { label: "Fighting skills - I am the main character", value: "fighter" },
            { label: "Hiding - I am NOT a main character", value: "hider" },
            { label: "Cooking - We still gotta eat, right?", value: "cook" },
            { label: "Sacrificing myself immediately, no questions", value: "sacrifice" },
        ],
    },
    pizzaTopping: {
        fieldName: "pizzaTopping",
        emoji: "üçï",
        label: `Pineapple on pizza? Choose wisely, this is a deal-breaker.`,
        options: [
            { label: "YES, and I will defend it with my life", value: "yes" },
            { label: "No, and I will judge you forever", value: "no" },
            { label: "I don't care. Just give me food", value: "idc" },
            { label: "Pineapple? I eat pizza with bananas", value: "chaotic" },
        ],
    },
    loveLanguage: {
        fieldName: "loveLanguage",
        emoji: "üòò",
        label: `What's your love language? (Aka: How do you demand affection?)`,
        options: [
            { label: "Words of affirmation (Tell me I'm pretty)", value: "words" },
            { label: "Acts of service (Do my laundry, pls)", value: "service" },
            { label: "Gifts (I accept cash, too)", value: "gifts" },
            { label: "Physical touch (Hugs or fights, either works)", value: "touch" },
        ],
    },
    conspiracyBelief: {
        fieldName: "conspiracyBelief",
        emoji: "üëΩ",
        label: `Which conspiracy theory are you most likely to believe?`,
        options: [
            { label: "Birds aren't real. They're government drones.", value: "birds" },
            { label: "The moon landing was staged.", value: "moon" },
            { label: "Bigfoot exists and he owes me money.", value: "bigfoot" },
            { label: "None, I'm normal. (Lies.)", value: "normal" },
        ],
    },
    spicyTolerance: {
        fieldName: "spicyTolerance",
        emoji: "ü•µ",
        label: `How spicy can you handle your food?`,
        options: [
            { label: "Mild - I cry over black pepper", value: "mild" },
            { label: "Medium - Just a little burn", value: "medium" },
            { label: "Spicy - Pain is temporary, flavor is forever", value: "spicy" },
            { label: "Ghost pepper challenge? Bring it on.", value: "extreme" },
        ],
    },
    pizzaToppingCrime: {
        fieldName: "pizzaToppingCrime",
        emoji: "üçç",
        label: `You just ordered pizza with friends. Someone suggests putting pineapple AND olives on it. What's your move?`,
        options: [
            { label: "Absolutely not. This is an abomination.", value: "no" },
            { label: "I mean, I'll try it, but I won't be happy about it.", value: "reluctant" },
            { label: "Actually, that sounds kinda good?", value: "chaotic_good" },
            { label: "I suggested it. I live for the chaos.", value: "agent_of_chaos" },
        ],
    },
    roadRageResponse: {
        fieldName: "roadRageResponse",
        emoji: "üöó",
        label: `You're driving and someone cuts you off. What do you do?`,
        options: [
            { label: "Scream internally but let it go.", value: "internal_screaming" },
            { label: "Aggressively overtake them to establish dominance.", value: "revenge" },
            { label: "Smile and wave like an absolute psycho.", value: "psychological_warfare" },
            { label: "Slowly follow them home just to scare them.", value: "unhinged" },
        ],
    },
    theLastFry: {
        fieldName: "theLastFry",
        emoji: "üçü",
        label: `You're out eating with your partner. There's ONE fry left. What happens next?`,
        options: [
            { label: "I take it. Survival of the fittest.", value: "mine" },
            { label: "I let them have it. Love is sacrifice.", value: "the_giver" },
            { label: "I suggest splitting it like civilized people.", value: "fair" },
            { label: "I eat it in one bite while staring them dead in the eyes.", value: "power_move" },
        ],
    },
    apocalypseSkills: {
        fieldName: "apocalypseSkills",
        emoji: "üßü",
        label: `A zombie apocalypse begins. What's your immediate survival strategy?`,
        options: [
            { label: "Find a weapon. It's me vs. the world now.", value: "fighter" },
            { label: "Find a hiding spot. I am NOT main character material.", value: "hider" },
            { label: "Join the zombies. It's easier that way.", value: "surrender" },
            { label: "Try to negotiate with them. Maybe they just need a friend?", value: "diplomat" },
        ],
    },
    cerealOrMilkFirst: {
        fieldName: "cerealOrMilkFirst",
        emoji: "ü•£",
        label: `How do you make cereal?`,
        options: [
            { label: "Cereal first, then milk. Like a normal human.", value: "cereal_first" },
            { label: "Milk first, then cereal. I enjoy watching the world burn.", value: "milk_first" },
            { label: "No milk. Dry cereal straight from the box.", value: "dry" },
            { label: "I don't eat cereal. I just drink coffee and suffer.", value: "coffee_only" },
        ],
    },
    textingStyle: {
        fieldName: "textingStyle",
        emoji: "üì±",
        label: `How do you text?`,
        options: [
            { label: "I respond instantly, even at 3 AM.", value: "instant" },
            { label: "I take hours to reply, then say 's'rry just saw this' (I didn't).", value: "delayed" },
            { label: "I send one-word replies and let the conversation die.", value: "short" },
            { label: "I spam memes and voice notes. Good luck keeping up.", value: "chaotic" },
        ],
    },
    dreamPet: {
        fieldName: "dreamPet",
        emoji: "üêç",
        label: `If you could have any pet (no limits), what would it be?`,
        options: [
            { label: "A dog or cat, I have standards.", value: "basic" },
            { label: "A snake, because I like making people uncomfortable.", value: "snake" },
            { label: "A raccoon, for maximum chaos.", value: "raccoon" },
            { label: "A dragon, because I refuse to be realistic.", value: "dragon" },
        ],
    },
    sleepHabits: {
        fieldName: "sleepHabits",
        emoji: "üò¥",
        label: `What are your sleep habits like?`,
        options: [
            { label: "I sleep 8 hours like a well-adjusted adult.", value: "healthy" },
            { label: "I fall asleep at 3 AM and regret it daily.", value: "nocturnal" },
            { label: "I take random naps at inconvenient times.", value: "napper" },
            { label: "Sleep? Never heard of it.", value: "insomniac" },
        ],
    },
    winningTheLottery: {
        fieldName: "winningTheLottery",
        emoji: "üí∞",
        label: `You just won the lottery. What's the first thing you do?`,
        options: [
            { label: "Invest it wisely like a responsible adult.", value: "invest" },
            { label: "Disappear forever and start a new life.", value: "vanish" },
            { label: "Buy something stupidly expensive immediately.", value: "impulse_buy" },
            { label: "Tell no one but subtly flex.", value: "flex" },
        ],
    },
    beingGhosted: {
        fieldName: "beingGhosted",
        emoji: "üëª",
        label: `You get ghosted by someone you really liked. What's your next move?`,
        options: [
            { label: "Accept it and move on. Their loss.", value: "mature" },
            { label: "Spam them with '?' every hour.", value: "needy" },
            { label: "Block them on everything before they can block me.", value: "block" },
            { label: "Make a dramatic TikTok about my heartbreak.", value: "petty" },
        ],
    },
    howDoYouArgue: {
        fieldName: "howDoYouArgue",
        emoji: "ü§¨",
        label: `How do you handle arguments?`,
        options: [
            { label: "I cry and hope they feel bad", value: "cry" },
            { label: "I aggressively send passive-aggressive memes", value: "meme_fighter" },
            { label: "I go full lawyer mode with evidence and references", value: "lawyer_mode" },
            { label: "I stare at them until they give up", value: "stare_master" },
        ],
    },
    relationshipFinance: {
        fieldName: "relationshipFinance",
        emoji: "üí∞",
        label: `Who should pay on the first date?`,
        options: [
            { label: "Whoever asked first, fair is fair", value: "whoever_asks" },
            { label: "Split the bill. We're not in the 1800s", value: "split" },
            { label: "They pay. My presence is the real gift", value: "they_pay" },
            { label: "Fake a bathroom break and disappear", value: "disappear" },
        ],
    },
    yourPetPersonality: {
        fieldName: "yourPetPersonality",
        emoji: "üêæ",
        label: `If you were a pet, what would you be?`,
        options: [
            { label: "A dog. Loyal, excitable, easily distracted", value: "dog" },
            { label: "A cat. Independent, judgmental, sleeps too much", value: "cat" },
            { label: "A goldfish. No thoughts, just vibes", value: "goldfish" },
            { label: "A raccoon. Loves trash and bad decisions", value: "raccoon" },
        ],
    },
    onlineShoppingHabits: {
        fieldName: "onlineShoppingHabits",
        emoji: "üì¶",
        label: `There's a huge sale online. What do you do?`,
        options: [
            { label: "Impulse buy and regret later", value: "impulse_buy" },
            { label: "Put everything in my cart and never check out", value: "cart_hoarder" },
            { label: "Compare prices for 3 hours before deciding", value: "price_comparer" },
            { label: "Ignore it. I am broke", value: "broke" },
        ],
    },
    favoriteChaosFoodCombo: {
        fieldName: "favoriteChaosFoodCombo",
        emoji: "üçΩÔ∏è",
        label: `What's your unhinged food combination?`,
        options: [
            { label: "Fries dipped in ice cream", value: "fries_icecream" },
            { label: "Peanut butter & pickles", value: "pb_pickles" },
            { label: "Cereal with orange juice instead of milk", value: "cereal_orange_juice" },
            { label: "I don't experiment. I fear change", value: "no_experiments" },
        ],
    },
    horrorMovieLogic: {
        fieldName: "horrorMovieLogic",
        emoji: "üéÉ",
        label: `You're in a horror movie. What's your role?`,
        options: [
            { label: "The one who dies first", value: "dies_first" },
            { label: "The skeptic who refuses to believe anything", value: "skeptic" },
            { label: "The one who makes stupid decisions and survives anyway", value: "lucky_survivor" },
            { label: "The villain. Enough running, I'm the problem now", value: "become_villain" },
        ],
    },
    bathroomDoorStrategy: {
        fieldName: "bathroomDoorStrategy",
        emoji: "üö™",
        label: `You're using a public restroom. There's no lock on the door. What do you do?`,
        options: [
            { label: "Hold it shut with my hand like a gladiator", value: "hold_door" },
            { label: "Make aggressive eye contact with anyone who tries to enter", value: "stare_them_down" },
            { label: "Use one foot to keep it shut while balancing on the toilet", value: "foot_hold" },
            { label: "Accept my fate. If someone walks in, they walk in", value: "accept_fate" },
        ],
    },
    cerealEatingStyle: {
        fieldName: "cerealEatingStyle",
        emoji: "ü•£",
        label: `How do you eat your cereal?`,
        options: [
            { label: "Milk first, then cereal like a psycho", value: "milk_first" },
            { label: "Cereal first, the way society intended", value: "cereal_first" },
            { label: "No milk. I eat it dry, like a warrior", value: "dry_cereal" },
            { label: "I drink the milk, then eat the cereal separately", value: "separate" },
        ],
    },
    unexpectedFight: {
        fieldName: "unexpectedFight",
        emoji: "ü¶µ",
        label: `You have to fistfight ONE of the following. Who do you pick?`,
        options: [
            { label: "A kindergartener with unlimited energy", value: "kindergartener" },
            { label: "A goose that has a personal vendetta against you", value: "angry_goose" },
            { label: "A robot programmed to perfectly copy your every move", value: "mirror_robot" },
            { label: "Your own clone, but they have slightly better reflexes", value: "evil_clone" },
        ],
    },
    fakeEmergencyExcuse: {
        fieldName: "fakeEmergencyExcuse",
        emoji: "üìû",
        label: `You need to fake an emergency to leave a terrible date. What do you say?`,
        options: [
            { label: `"My pet goldfish is in labor, I have to go!"`, value: "goldfish_labor" },
            { label: `"My grandma just texted me in all caps, this is serious."`, value: "grandma_text" },
            { label: `"My house is on fire. No, you can't come help."`, value: "house_fire" },
            { label: `"I left the oven on, but I live in a hotel, so this is really bad."`, value: "hotel_oven" },
        ],
    },
    zombieApocalypseSkill: {
        fieldName: "zombieApocalypseSkill",
        emoji: "üßü",
        label: `A zombie apocalypse begins. What's your special skill?`,
        options: [
            { label: "I distract zombies by screaming and running in circles", value: "chaos_distraction" },
            { label: "I befriend the zombies. I am their king now.", value: "zombie_king" },
            { label: "I hoard all the snacks and provide zero real help", value: "snack_hoarder" },
            { label: "I die immediately, but dramatically", value: "dramatic_death" },
        ],
    },
    wakingUpWeird: {
        fieldName: "wakingUpWeird",
        emoji: "‚è∞",
        label: `You wake up and something is... wrong. What is it?`,
        options: [
            { label: "You can only communicate through interpretive dance", value: "dance_only" },
            { label: "Your hands have been replaced with spaghetti", value: "spaghetti_hands" },
            { label: "You now float 2 inches off the ground permanently", value: "hover_mode" },
            { label: "Your internal monologue is now narrated by Morgan Freeman", value: "morgan_freeman_voice" },
        ],
    },
    howYouEatIceCream: {
        fieldName: "howYouEatIceCream",
        emoji: "üç¶",
        label: `How do you eat ice cream?`,
        options: [
            { label: "I bite into it like a maniac", value: "ice_cream_biter" },
            { label: "I lick it politely like a normal person", value: "licking_normal" },
            { label: "I let it melt first and drink it", value: "melt_drinker" },
            { label: "I eat the cone first, then regret everything", value: "cone_first" },
        ],
    },
    dramaticBreakupStyle: {
        fieldName: "dramaticBreakupStyle",
        emoji: "üíî",
        label: `If you had to break up with someone dramatically, how would you do it?`,
        options: [
            { label: `"It's not you, it's me. Just kidding, it's actually you."`, value: "its_you" },
            { label: `"I'm going on a journey to find myself... and you're not invited."`, value: "find_myself" },
            { label: `"This relationship has been a social experiment. Thank you for your participation."`, value: "social_experiment" },
            { label: `"I'm moving to Antarctica. Alone."`, value: "antarctica" },
        ],
    },
    timeTravelMistake: {
        fieldName: "timeTravelMistake",
        emoji: "‚è≥",
        label: `You accidentally time travel 200 years into the past. What's the first thing you do?`,
        options: [
            { label: "Invent the 'Rickroll' 200 years early", value: "rickroll_history" },
            { label: "Try to explain WiFi and get burned as a witch", value: "wifi_witch" },
            { label: "Accidentally become royalty because of your weird futuristic slang", value: "accidental_royalty" },
            { label: "Panic, scream, and cry. A lot.", value: "panic_scream" },
        ],
    },
    completelyUselessSuperpower: {
        fieldName: "completelyUselessSuperpower",
        emoji: "ü¶∏‚Äç‚ôÇÔ∏è",
        label: `You get a superpower, but it's completely useless. What is it?`,
        options: [
            { label: "You can teleport‚Ä¶ but only 2 inches at a time", value: "tiny_teleport" },
            { label: "You can make any food spicy, but only when nobody wants it spicy", value: "spicy_curse" },
            { label: "You can run really fast‚Ä¶ but only backward", value: "fast_backward" },
            { label: "You can perfectly mimic a duck's quack. That's it.", value: "duck_voice" },
        ],
    },
    friendBetrayalScenario: {
        fieldName: "friendBetrayalScenario",
        emoji: "ü´±üèΩ‚Äçü´≤üèæ",
        label: `Your best friend just betrayed you. What did they do?`,
        options: [
            { label: "They started watching our favorite show without me", value: "netflix_betrayal" },
            { label: "They stole my exact Starbucks order and now I feel robbed", value: "coffee_identity_theft" },
            { label: "They made an inside joke with someone else. How dare they.", value: "inside_joke_traitor" },
            { label: "They stepped on my shoe and didn't say sorry", value: "shoe_disrespect" },
        ],
    },
    wakingUpAsRandomObject: {
        fieldName: "wakingUpAsRandomObject",
        emoji: "üîÑ",
        label: `You wake up and you are no longer human. What are you?`,
        options: [
            { label: "A Roomba, doomed to clean forever", value: "roomba" },
            { label: "A traffic cone, standing uselessly on the street", value: "traffic_cone" },
            { label: "A lost sock in a washing machine", value: "lost_sock" },
            { label: "A Bluetooth speaker nobody knows how to connect to", value: "bluetooth_speaker" },
        ],
    },
    terribleSuperpower: {
        fieldName: "terribleSuperpower",
        emoji: "ü¶∏",
        label: `You gain a superpower, but it's completely useless. What is it?`,
        options: [
            { label: "You can refill any drink, but only with lukewarm water", value: "lukewarm_water" },
            { label: "You can see 1 second into the future", value: "1_second_future" },
            { label: "You can make any room smell like wet cardboard", value: "wet_cardboard" },
            { label: "You can run at full speed‚Ä¶ but only in a perfectly straight line", value: "straight_runner" },
        ],
    },
    worstWayToLoseTrust: {
        fieldName: "worstWayToLoseTrust",
        emoji: "üßê",
        label: `What is the worst way to instantly lose trust in someone?`,
        options: [
            { label: "They say 'trust me' before doing something sketchy", value: "trust_me_liar" },
            { label: "They eat pizza with a fork and knife", value: "fork_and_knife_pizza" },
            { label: "They pronounce GIF as 'jif' with confidence", value: "jif_disaster" },
            { label: "They walk slow in front of you when you're in a hurry", value: "slow_walker" },
        ],
    },
    workplaceLazinessStrategy: {
        fieldName: "workplaceLazinessStrategy",
        emoji: "üíº",
        label: `You need to look busy at work but don't want to actually work. What do you do?`,
        options: [
            { label: "Stare at my screen intensely while doing absolutely nothing", value: "screen_stare" },
            { label: "Walk around holding a piece of paper. Nobody questions it.", value: "paper_walk" },
            { label: "Type random things really fast so it looks like I'm coding", value: "fake_typing" },
            { label: "Join a Zoom call and leave my camera off, forever", value: "zoom_ghost" },
        ],
    },
    worstPossibleTattoo: {
        fieldName: "worstPossibleTattoo",
        emoji: "üñãÔ∏è",
        label: `You have to get a tattoo but it has to be something absolutely terrible. What do you choose?`,
        options: [
            { label: `"Live, Laugh, Laundry" in Comic Sans`, value: "comic_sans_tattoo" },
            { label: `"Insert cool tattoo here" on my forehead`, value: "insert_tattoo" },
            { label: `"WiFi Password: 12345678" on my arm`, value: "wifi_tattoo" },
            { label: `"My Ex's Name in HUGE cursive letters`, value: "ex_name_tattoo" },
        ],
    },
    worstMorningRoutine: {
        fieldName: "worstMorningRoutine",
        emoji: "üåÖ",
        label: `Which of these is the worst way to start your morning?`,
        options: [
            { label: "Opening your phone and immediately seeing an email from your boss", value: "boss_email" },
            { label: "Realizing you forgot to charge your phone overnight", value: "dead_phone" },
            { label: "Stepping on something wet and you don't know what it is", value: "mystery_wet" },
            { label: "Waking up and immediately stubbing your toe", value: "toe_stub" },
        ],
    },
    chaosSandwich: {
        fieldName: "chaosSandwich",
        emoji: "ü•™",
        label: `Which one of these is the worst sandwich ever?`,
        options: [
            { label: "Bread, toothpaste, bread", value: "toothpaste_sandwich" },
            { label: "Bread, ice cubes, bread", value: "ice_cube_sandwich" },
            { label: "Bread, banana, ketchup, bread", value: "banana_ketchup" },
            { label: "Bread, sadness, bread", value: "sadness_sandwich" },
        ],
    },
    accidentalVillainOrigin: {
        fieldName: "accidentalVillainOrigin",
        emoji: "üòà",
        label: `If you accidentally became a supervillain, what was your villain origin story?`,
        options: [
            { label: "Someone walked really slow in front of me and I snapped", value: "slow_walker_rage" },
            { label: "My favorite snack got discontinued and I never recovered", value: "snack_discontinued" },
            { label: "A baby gave me a weird look and I took it personally", value: "baby_insult" },
            { label: "I lost an argument in a dream and woke up furious", value: "dream_argument" },
        ],
    },
    emotionalSupportItem: {
        fieldName: "emotionalSupportItem",
        emoji: "üß∏",
        label: `You're not yourself without your emotional support item. What is it?`,
        options: [
            { label: "My hoodie. I wear it even when it's 100¬∞F outside", value: "hoodie" },
            { label: "My favorite water bottle. Hydration is my personality", value: "water_bottle" },
            { label: "A snack I carry with me at all times, just in case", value: "emergency_snack" },
            { label: "My headphones. I would rather go deaf than listen to the world", value: "headphones" },
        ],
    },
    weirdestSuperpower: {
        fieldName: "weirdestSuperpower",
        emoji: "ü¶∏‚Äç‚ôÇÔ∏è",
        label: `Which completely useless superpower would you choose?`,
        options: [
            { label: "You can instantly dry wet socks, but only for other people", value: "sock_dryer" },
            { label: "You can make any song play in someone's head, but only at 2 AM", value: "2am_earworm" },
            { label: "You can communicate with houseplants, but they all hate you", value: "plant_whisperer" },
            { label: "You can make any chair slightly uncomfortable, but only when someone else sits on it", value: "chair_curse" },
        ],
    },
    wakingUpAsFood: {
        fieldName: "wakingUpAsFood",
        emoji: "üçï",
        label: `You wake up and realize you've turned into a food item. What are you?`,
        options: [
            { label: "A slightly stale croissant, yet still elegant", value: "stale_croissant" },
            { label: "A single chicken nugget, lost and alone", value: "lonely_nugget" },
            { label: "A bowl of cereal, but someone already poured the milk", value: "soggy_cereal" },
            { label: "A half-eaten slice of pizza, abandoned at a party", value: "forgotten_pizza" },
        ],
    },
    mostAnnoyingVillainPower: {
        fieldName: "mostAnnoyingVillainPower",
        emoji: "üòà",
        label: `If you were an annoying supervillain, what would your power be?`,
        options: [
            { label: "I can make someone forget why they walked into a room", value: "forgot_mission" },
            { label: "I can slightly misalign every framed picture in their house", value: "crooked_frames" },
            { label: "I can summon a loud, unskippable ad right before their favorite song", value: "ad_summoner" },
            { label: "I can make their phone buzz, but there's no notification", value: "phantom_vibrate" },
        ],
    },
    cursedCelebrityInteraction: {
        fieldName: "cursedCelebrityInteraction",
        emoji: "üé§",
        label: `You meet your favorite celebrity, but something goes terribly wrong. What happens?`,
        options: [
            { label: "I accidentally call them by the name of their biggest rival", value: "wrong_name" },
            { label: "I trip and fall, taking them down with me", value: "celebrity_tackle" },
            { label: "I say 'I love your work!' but realize I've never seen anything they've done", value: "fake_fan" },
            { label: "I panic and just whisper 'beans' before running away", value: "panic_beans" },
        ],
    },
    reincarnatedAsRandomObject: {
        fieldName: "reincarnatedAsRandomObject",
        emoji: "üîÑ",
        label: `You get reincarnated, but not as a human. What do you come back as?`,
        options: [
            { label: "A vending machine, forever eating people's money", value: "cursed_vending_machine" },
            { label: "An IKEA chair that nobody can assemble correctly", value: "ikea_chair" },
            { label: "A fridge light that only turns on when the door is closed", value: "fridge_light" },
            { label: "A hotel room TV remote, lost forever", value: "lost_remote" },
        ],
    },
    randomPetPeeve: {
        fieldName: "randomPetPeeve",
        emoji: "üò§",
        label: `What's the most irrational thing that instantly annoys you?`,
        options: [
            { label: "When a YouTube ad is longer than the actual video", value: "long_ad" },
            { label: "When someone replies 'K' to a long message", value: "k_response" },
            { label: "When people don't speed up at the end of an escalator", value: "escalator_slowpoke" },
            { label: "When someone breathes way too loud for no reason", value: "loud_breathing" },
        ],
    },
    worstPossibleNickname: {
        fieldName: "worstPossibleNickname",
        emoji: "üìõ",
        label: `Your friends have decided to give you a nickname, but it's terrible. What is it?`,
        options: [
            { label: "Moist", value: "moist" },
            { label: "Crusty", value: "crusty" },
            { label: "Grandpa Energy", value: "grandpa_energy" },
            { label: "Biscuit Boy/Girl", value: "biscuit_person" },
        ],
    },
    workplaceSuperpower: {
        fieldName: "workplaceSuperpower",
        emoji: "üíº",
        label: `You gain a superpower, but it's only useful at work. What is it?`,
        options: [
            { label: "I can perfectly time bathroom breaks to avoid doing actual work", value: "bathroom_timing" },
            { label: "I can make my keyboard sound 10x louder so people think I'm working hard", value: "loud_typing" },
            { label: "I can make my boss walk away the second they try to assign me a task", value: "boss_repellent" },
            { label: "I can instantly mute the most annoying coworker", value: "coworker_mute" },
        ],
    },
    weirdestTimeTravelMission: {
        fieldName: "weirdestTimeTravelMission",
        emoji: "‚è≥",
        label: `You've been sent back in time for one very specific reason. What is it?`,
        options: [
            { label: "To stop the first person from ever clapping on a plane", value: "clap_stopper" },
            { label: "To make sure flip phones never go out of style", value: "flip_phone_savior" },
            { label: "To plant an ancient meme so historians are confused", value: "historical_meme" },
            { label: "To make sure 'Shrek 2' still gets made", value: "shrek_2_protector" },
        ],
    },
    trustTest: {
        fieldName: "trustTest",
        emoji: "ü§®",
        label: `Who would you trust more for no logical reason?`,
        options: [
            { label: "Someone who wears their watch on the right hand", value: "watch_right" },
            { label: "A parking attendant who refuses to take money", value: "honest_parking_guy" },
            { label: "Someone who carries a water bottle everywhere", value: "water_bottle_person" },
            { label: "Someone who never skips a Netflix intro", value: "skip_intro_purist" },
        ],
    },
    randomPhoneCheck: {
        fieldName: "randomPhoneCheck",
        emoji: "üì±",
        label: `You check your phone for no reason. What do you do?`,
        options: [
            { label: "Open WhatsApp, stare at it, close it again", value: "whatsapp_loop" },
            { label: "Scroll TikTok for 2 minutes... then realize it's been an hour", value: "tiktok_black_hole" },
            { label: "Look at the same five photos in your gallery", value: "gallery_replay" },
            { label: "Check your bank balance, even though you know it's sad", value: "check_sad_balance" },
        ],
    },
    slowInternetExcuse: {
        fieldName: "slowInternetExcuse",
        emoji: "üåê",
        label: `Your internet is slow. Who do you blame first?`,
        options: [
            { label: "The weather, obviously", value: "blame_weather" },
            { label: "The neighbor who's streaming a whole drama series in HD", value: "neighbor_hd_streaming" },
            { label: "The internet provider (because that's tradition)", value: "blame_provider" },
            { label: "Myself... because I forgot to pay the bill", value: "forgot_to_pay" },
        ],
    },
    unnecessaryPanic: {
        fieldName: "unnecessaryPanic",
        emoji: "üò±",
        label: `What tiny thing sends you into instant panic mode?`,
        options: [
            { label: "Wallet isn't in my pocket... oh wait, it's in my bag", value: "wallet_missing" },
            { label: "Hearing a weird 'click-clack' noise from my car", value: "car_noise_panic" },
            { label: "Phone gets slightly warm, I assume it's about to explode", value: "phone_explosion" },
            { label: "Opening the fridge and forgetting why I did", value: "fridge_amnesia" },
        ],
    },
    mostAnnoyingEatingHabit: {
        fieldName: "mostAnnoyingEatingHabit",
        emoji: "üçΩÔ∏è",
        label: `Which of these is the most annoying eating habit?`,
        options: [
            { label: "Mixing ALL the food on your plate before eating", value: "mix_everything" },
            { label: "Eating instant noodles with rice (double carbs, baby)", value: "noodles_with_rice" },
            { label: "Drinking sweet tea right after eating something sweet", value: "sweet_on_sweet" },
            { label: "Chewing extra loud like it's an ASMR video", value: "chewing_asmr" },
        ],
    },
    whoAreYouInAClothingStore: {
        fieldName: "whoAreYouInAClothingStore",
        emoji: "üëï",
        label: `If you're in a clothing store, what type of person are you?`,
        options: [
            { label: "Trying on clothes but never buying anything", value: "window_shopper" },
            { label: "Touching the fabric like a fashion expert", value: "fabric_feeler" },
            { label: "Checking the price before even looking at the design", value: "price_first" },
            { label: "Following someone else around, not even shopping", value: "tag_along" },
        ],
    },
    worstHidingSpot: {
        fieldName: "worstHidingSpot",
        emoji: "üôà",
        label: `You're playing hide and seek, but you have to pick a terrible hiding spot. Which one do you choose?`,
        options: [
            { label: "Behind a curtain, but your feet are showing", value: "curtain_fail" },
            { label: "Inside the fridge... and immediately regret it", value: "fridge_regret" },
            { label: "Standing in the middle of the room and hoping you become invisible", value: "just_standing_there" },
            { label: "Behind a door... but the door is made of glass", value: "glass_door_fail" },
        ],
    },
    howYouAnnoyFriends: {
        fieldName: "howYouAnnoyFriends",
        emoji: "üòÇ",
        label: `When messing with your friends, what's your go-to move?`,
        options: [
            { label: "Bringing up a dumb mistake they made 5 years ago", value: "old_mistake" },
            { label: "Giving them a stupid nickname that sticks forever", value: "nickname_curse" },
            { label: "Texting their mom so they get in trouble", value: "snitch_to_mom" },
            { label: "Editing their photo into a meme and sending it to the group chat", value: "meme_humiliation" },
        ],
    },
    weirdItemInBag: {
        fieldName: "weirdItemInBag",
        emoji: "üéí",
        label: `Which weird item absolutely must be in your bag?`,
        options: [
            { label: "A fork and spoon, just in case", value: "emergency_cutlery" },
            { label: "Cold medicine, even if you're perfectly healthy", value: "medicine_for_no_reason" },
            { label: "Charging cables for EVERY phone, even though you only own one", value: "charging_cables" },
            { label: "A band-aid... for emotional wounds", value: "band_aid_emotional" },
        ],
    },
    worstWayToEatPancakes: {
        fieldName: "worstWayToEatPancakes",
        emoji: "ü•û",
        label: `You're eating pancakes. What's the worst possible way to do it?`,
        options: [
            { label: "Stack all of them and eat them like a sandwich", value: "pancake_sandwich" },
            { label: "Eat them with a spoon, like a monster", value: "spoon_pancakes" },
            { label: "Take huge bites straight from the plate, no hands", value: "no_hands_pancakes" },
            { label: "Chew them first, THEN take a sip of syrup", value: "syrup_first" },
        ],
    },
    mostUselessSuperpower: {
        fieldName: "mostUselessSuperpower",
        emoji: "ü¶∏",
        label: `Which completely useless superpower would you choose?`,
        options: [
            { label: "You can refill any drink, but only with room temperature water", value: "lukewarm_water" },
            {
                label: "You can predict exactly when your food delivery will arrive... but only after it arrives",
                value: "useless_prediction",
            },
            { label: "You can speak to fish, but they just scream", value: "fish_screams" },
            { label: "You can run extremely fast... but only in circles", value: "fast_circle_runner" },
        ],
    },
    dumbestApocalypseSurvivalSkill: {
        fieldName: "dumbestApocalypseSurvivalSkill",
        emoji: "üßü",
        label: `A zombie apocalypse has started. What's your unique survival skill?`,
        options: [
            { label: "I can dramatically yell 'NOOOO!' when someone dies", value: "drama_expert" },
            { label: "I carry a Bluetooth speaker and play 'Eye of the Tiger' for motivation", value: "zombie_dj" },
            { label: "I can eat expired food without getting sick", value: "expired_food_survivor" },
            { label: "I run faster than my friends. That's all I need.", value: "fast_friends" },
        ],
    },
    mostRidiculousPetPeeve: {
        fieldName: "mostRidiculousPetPeeve",
        emoji: "üò§",
        label: `What's the most irrational thing that makes you instantly mad?`,
        options: [
            { label: "When people say 'literally' but mean 'figuratively'", value: "literally_wrong" },
            { label: "When someone leaves exactly one second on the microwave", value: "microwave_time" },
            { label: "When someone texts 'hey' but doesn't say why", value: "hey_text" },
            { label: "When people don't walk fast enough after crossing the street", value: "slow_crosswalk" },
        ],
    },
    worstNicknameEver: {
        fieldName: "worstNicknameEver",
        emoji: "üìõ",
        label: `Your friends have decided to give you a terrible nickname. What is it?`,
        options: [
            { label: "Moist", value: "moist" },
            { label: "Crusty", value: "crusty" },
            { label: "Grandpa Energy", value: "grandpa_energy" },
            { label: "Sniffles", value: "sniffles" },
        ],
    },
    cursedRealityShow: {
        fieldName: "cursedRealityShow",
        emoji: "üì∫",
        label: `You're forced to compete on a terrible reality show. Which one do you pick?`,
        options: [
            { label: `"Fridge Roulette" - You must eat whatever is in a random stranger's fridge`, value: "fridge_roulette" },
            { label: `"Silent Library, but it's a haunted house"`, value: "silent_library_haunted" },
            { label: `"Who Wants to Be Social?" - A show where introverts must survive forced small talk`, value: "social_torture" },
            { label: `"Find the Remote" - You must find a missing TV remote in an unknown house"`, value: "lost_remote_hunt" },
        ],
    },
    worstWayToRespondToACompliment: {
        fieldName: "worstWayToRespondToACompliment",
        emoji: "üò≥",
        label: `Someone gives you a compliment. What's the worst way to respond?`,
        options: [
            { label: `"I know." *walks away*"`, value: "confident_exit" },
            { label: `"Thanks. My mom says that too."`, value: "mom_says_so" },
            { label: `"You have horrible taste."`, value: "insult_taste" },
            { label: `"Haha... wait, was that sarcasm?"`, value: "paranoia" },
        ],
    },
    reincarnatedAsAStupidObject: {
        fieldName: "reincarnatedAsAStupidObject",
        emoji: "üîÑ",
        label: `You've been reincarnated, but not as a human. What are you now?`,
        options: [
            { label: "A vending machine, constantly stealing people's money", value: "vending_machine" },
            { label: "A hotel TV remote, forever lost under the bed", value: "lost_remote" },
            { label: "A fridge light that only turns on when the door is closed", value: "fridge_light" },
            { label: "A traffic cone, standing uselessly on the street", value: "traffic_cone" },
        ],
    },
    worstPossibleBreakfast: {
        fieldName: "worstPossibleBreakfast",
        emoji: "ü•£",
        label: `You HAVE to eat one of these cursed breakfasts. Which one do you pick?`,
        options: [
            { label: "Cold spaghetti with orange juice", value: "spaghetti_orange_juice" },
            { label: "A bowl of ice cubes with ketchup", value: "ice_cubes_ketchup" },
            { label: "A pancake with toothpaste instead of syrup", value: "toothpaste_pancake" },
            { label: "A peanut butter and pickle smoothie", value: "pb_pickle_smoothie" },
        ],
    },
    worstWayToAnswerThePhone: {
        fieldName: "worstWayToAnswerThePhone",
        emoji: "üìû",
        label: `Your phone rings. What's the worst possible way to answer it?`,
        options: [
            { label: `"What do you want?" before they even say hello"`, value: "instant_rudeness" },
            { label: `"Who gave you this number?!"`, value: "panic" },
            { label: `"If this is about the incident, I wasn't involved."`, value: "suspicious" },
            { label: `"It's done. No witnesses." *hangs up*`, value: "terrifying" },
        ],
    },
    worstAnimalToFight: {
        fieldName: "worstAnimalToFight",
        emoji: "üêç",
        label: `You have to fistfight an animal, but you get to choose. Which one do you fight?`,
        options: [
            { label: "A kangaroo (they train for this)", value: "kangaroo" },
            { label: "A goose (pure evil in bird form)", value: "goose" },
            { label: "An octopus (it has too many hands)", value: "octopus" },
            { label: "A raccoon (it fights dirty)", value: "raccoon" },
        ],
    },
    worstPlaceToWakeUp: {
        fieldName: "worstPlaceToWakeUp",
        emoji: "üòµ",
        label: `You wake up in a place you definitely should NOT be. Where are you?`,
        options: [
            { label: "Inside a McDonald's play area tunnel", value: "mcd_playplace" },
            { label: "In the middle of a live newscast", value: "live_news" },
            { label: "On a cruise ship‚Ä¶ but you don't remember boarding", value: "mystery_cruise" },
            { label: "Strapped to a shopping cart, rolling downhill", value: "shopping_cart" },
        ],
    },
    dumbestSupervillainOrigin: {
        fieldName: "dumbestSupervillainOrigin",
        emoji: "üòà",
        label: `If you became a supervillain, what was your origin story?`,
        options: [
            { label: "I held the door for someone and they didn't say thank you", value: "rude_person" },
            { label: "Someone microwaved fish at work", value: "fish_microwave" },
            { label: "I got a 'K' response to my long text", value: "k_response" },
            { label: "A baby stared at me weirdly and I took it personally", value: "baby_stare" },
        ],
    },
    worstPossibleAlternateUniverse: {
        fieldName: "worstPossibleAlternateUniverse",
        emoji: "üåå",
        label: `You accidentally get transported to an alternate universe. What's the worst one?`,
        options: [
            { label: "A world where you can only communicate through interpretive dance", value: "dance_language" },
            { label: "A world where all songs are only sung in Minion language", value: "minion_songs" },
            { label: "A world where everything is normal, but Shrek is legally required to be in every movie", value: "shrek_universe" },
            {
                label: "A world where everyone has to announce their actions before doing them (ex: 'I am now walking')",
                value: "narrator_world",
            },
        ],
    },
    worstWayToEndAJobInterview: {
        fieldName: "worstWayToEndAJobInterview",
        emoji: "üíº",
        label: `Your job interview is ending. What's the worst thing you can say before leaving?`,
        options: [
            { label: `"You'll be hearing from my lawyer."`, value: "lawyer_exit" },
            { label: `"So, when do I start?" *without waiting for an answer*`, value: "overconfident" },
            { label: `"Sorry, what was this job for again?"`, value: "forgot_job" },
            { label: `"I wasn't listening, but I'm sure I'll figure it out."`, value: "zero_attention" },
        ],
    },
    worstThingToBeCaughtGoogling: {
        fieldName: "worstThingToBeCaughtGoogling",
        emoji: "üîç",
        label: `You're caught mid-Google search. What's the worst thing to be caught searching for?`,
        options: [
            { label: `"How to delete search history‚Ä¶ permanently"`, value: "delete_history" },
            { label: `"How long can you legally keep a library book before it's a crime?"`, value: "library_crime" },
            { label: `"What happens if you microwave a fork?"`, value: "microwave_fork" },
            { label: `"How do I prove I'm not a lizard person?"`, value: "lizard_identity" },
        ],
    },
    worstTimeTravelMission: {
        fieldName: "worstTimeTravelMission",
        emoji: "‚è≥",
        label: `You get sent back in time with ONE job to do. Which mission do you get?`,
        options: [
            { label: "Make sure flip phones never go out of style", value: "flip_phone_mission" },
            { label: "Make sure the first person to ever clap on a plane never does it", value: "no_plane_claps" },
            { label: "Plant an ancient meme so historians are confused", value: "meme_history" },
            { label: "Stop the first person from ever saying 'YOLO'", value: "yolo_destroyer" },
        ],
    },
    worstItemToReceiveAsABirthdayGift: {
        fieldName: "worstItemToReceiveAsABirthdayGift",
        emoji: "üéÅ",
        label: `Someone gives you a birthday gift. What's the worst thing it could be?`,
        options: [
            { label: "A single sock (not even a pair)", value: "single_sock" },
            { label: "A framed picture of themselves", value: "self_portrait" },
            { label: "A bottle labeled 'Definitely Not Poison'", value: "suspicious_bottle" },
            { label: "A pack of Uno cards, but all of them are Draw 4s", value: "evil_uno" },
        ],
    },
    worstThingToSayInAnElevator: {
        fieldName: "worstThingToSayInAnElevator",
        emoji: "üè¢",
        label: `You step into an elevator with strangers. What's the worst thing you could say?`,
        options: [
            { label: `"I sure hope this thing was inspected recently."`, value: "elevator_inspection" },
            { label: `"Ever wonder how long we'd survive if this got stuck?"`, value: "trapped_forever" },
            { label: `"So‚Ä¶ any of you ever seen a ghost?"`, value: "elevator_ghost" },
            { label: `"It's almost time." *but don't explain further*`, value: "mystery_time" },
        ],
    },
    worstThingToYellInALibrary: {
        fieldName: "worstThingToYellInALibrary",
        emoji: "üìö",
        label: `You're in a quiet library. What's the worst thing you could suddenly yell?`,
        options: [
            { label: `"I HAVE SOLVED THE MYSTERY!"`, value: "solved_mystery" },
            { label: `"YOU'RE LYING TO ME, BOOKS!"`, value: "books_lied" },
            { label: `"EVERYBODY CLAP YOUR HANDS!" *proceeds to clap aggressively*`, value: "clap_hands" },
            { label: `"I KNEW IT! THEY WERE HERE!" *runs out dramatically*`, value: "paranoia_escape" },
        ],
    },
} as const
